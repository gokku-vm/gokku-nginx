#!/bin/bash
SERVICE_NAME="$1"
APP_NAME="$2"
PROCESS_TYPE="$3"

if [ -z "$SERVICE_NAME" ] || [ -z "$APP_NAME" ]; then
    echo "Usage: gokku nginx:update-upstream <service> <app> [process-type]"
    echo ""
    echo "Examples:"
    echo "  gokku nginx:update-upstream nginx-lb api"
    echo "  gokku nginx:update-upstream nginx-lb api web"
    exit 1
fi

# Source plugin helpers from Gokku repository https://github.com/thadeu/gokku/blob/main/scripts/plugin-helpers.sh
source /opt/gokku/scripts/plugin-helpers.sh

# Source local functions
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/../lib/functions.sh"

echo "-----> Updating upstream for app '$APP_NAME'"

# Get app domain
APP_DIR="/opt/gokku/apps/$APP_NAME"
CNAME_FILE="$APP_DIR/CNAME"

if [ -f "$CNAME_FILE" ]; then
    DOMAIN=$(cat "$CNAME_FILE" | tr -d '\n')
    echo "-----> Using domain: $DOMAIN"
else
    DOMAIN="${APP_NAME}.local"
    echo "-----> No CNAME found, using default domain: $DOMAIN"
fi

# Determine upstream name
if [ -n "$PROCESS_TYPE" ]; then
    UPSTREAM_NAME="${APP_NAME}-${PROCESS_TYPE}"
else
    UPSTREAM_NAME="$APP_NAME"
fi

# Get all running container ports using docker ps
get_ports_by_name "$APP_NAME"

# Create upstream configuration
CONFIG_FILE="/opt/gokku/services/$SERVICE_NAME/conf.d/${UPSTREAM_NAME}.conf"

if [ ${#PORTS[@]} -eq 0 ]; then
    # No running containers, remove config if exists
    if [ -f "$CONFIG_FILE" ]; then
        rm -f "$CONFIG_FILE"
        echo "-----> Removed upstream configuration: $CONFIG_FILE"
    else
        echo "-----> No running containers found, nothing to update"
    fi
else
    nginx_upstream_config "$CONFIG_FILE" "$UPSTREAM_NAME" "$DOMAIN"
    echo "-----> Upstream configuration updated: $CONFIG_FILE"
    echo "-----> Added ${#PORTS[@]} server(s) to upstream '$UPSTREAM_NAME'"
fi

# Reload nginx if container is running
if container_is_running "$SERVICE_NAME"; then
    echo "-----> Reloading nginx configuration"
    docker exec "$SERVICE_NAME" nginx -s reload
    echo "-----> Nginx configuration reloaded"
else
    echo "-----> Nginx container not running, configuration will be loaded on next start"
fi

echo "-----> Upstream '$UPSTREAM_NAME' updated for domain '$DOMAIN'"
